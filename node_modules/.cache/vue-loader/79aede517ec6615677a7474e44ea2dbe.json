{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/light/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/light/index.vue","mtime":1596988453084},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {getBrand, getSeries, getModel} from \"@/api/tools\";\nimport {GetModelIdByInfo, importCarLamp} from \"@/api/carlamp\";\nimport UploadExcelComponent from '@/components/UploadExcel/index.vue'\n\nimport InfoDta from \"./light/form\";\nimport {PostDataByCityAll} from \"@/api/shop\";\n\nlet sel = this;\nexport default {\n    name: 'index',\n    data() {\n        return {\n            total: 0,\n            car: '',\n            importVisible: false,\n            list: [],\n            postFrom: {},\n            regionHiera: [],\n            listQuery: {\n                limit: 10,\n                page: 1,\n            },\n            props: {\n                lazy: true,\n                lazyLoad(node, resolve) {\n                    const {level, label} = node;\n                    console.log(node)\n                    if (level === 0) {\n                        getBrand().then(res => {\n                            var data = res.data;\n\n                            let nodes = [];\n                            for (let i = 0; i < data.length; i++) {\n                                nodes.push({label: data[i].name, value: data[i].brandid});\n                            }\n                            resolve(nodes);\n                        });\n\n                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n                    }\n                    if (level === 1) {\n                        getSeries(node.data.value).then(res => {\n                            var data = res.data;\n                            let nodes = [];\n                            for (let i = 0; i < data.length; i++) {\n                                nodes.push({\n                                    label: data[i].factory_name + \" \" + data[i].series_name,\n                                    value: data[i].series_id\n                                });\n                            }\n                            resolve(nodes);\n                        });\n\n                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n                    }\n\n                    if (level === 2) {\n                        getModel(node.data.value).then(res => {\n                            var data = res.data;\n                            let nodes = [];\n                            for (let i = 0; i < data.length; i++) {\n                                nodes.push({\n                                    label: data[i].label,\n                                    value: data[i].value,\n                                    leaf: level >= 2\n                                });\n                            }\n                            resolve(nodes);\n                        });\n\n                        // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n                    }\n                    if (level === 3) {\n                        let nodes = [];\n                        resolve(nodes);\n                    }\n                }\n            },\n        }\n    },\n    created() {\n        getBrand().then(res => {\n            this.regionHiera = res.data;\n        });\n    },\n    components: {\n        InfoDta,\n        UploadExcelComponent\n    },\n    methods: {\n        importDow() {\n            let url = 'https://pdpt.oss-cn-beijing.aliyuncs.com/%E6%94%B9%E7%81%AF%E6%96%B9%E6%A1%88%E5%AF%BC%E5%85%A5%E6%A8%A1%E6%9D%BF.xlsx';\n            window.location.href = url;\n        },\n        handleClose() {\n            this.importVisible = false\n\n        },\n        importCarLamp() {\n            this.importVisible = true\n        },\n        beforeUpload(file) {\n            const isLt1M = file.size / 1024 / 1024 < 1\n\n            if (isLt1M) {\n                return true\n            }\n\n            this.$message({\n                message: 'Please do not upload files larger than 1m in size.',\n                type: 'warning'\n            })\n            return false\n        },\n        handleSizeChange(val) {\n            this.listQuery.limit = val\n            this.fetchList()\n        },\n\n        handleCurrentChange(val) {\n            this.listQuery.page = 1\n            this.fetchList()\n        },\n        handleSuccess({results, header}) {\n            this.tableData = results\n            console.log(results)\n            importCarLamp(results).then(res => {\n                this.importVisible = false;\n                this.$message.success(res.data.msg);\n            })\n\n            this.tableHeader = header\n        },\n\n        updateRow(model_id) {\n\n            this.fetchList();\n        },\n\n        handleView(item) {\n            this.$refs.infodata.handleView(item);\n        },\n        elCascaderCar() {\n            let that = this\n            setTimeout(function () {\n                document.querySelectorAll('.el-cascader-node__label').forEach(el => {\n                    el.onclick = function () {\n                        this.previousElementSibling.click()\n                        that.$refs.car.dropDownVisible = false\n                    }\n                })\n                document\n                    .querySelectorAll('.el-cascader-panel .el-radio')\n                    .forEach(el => {\n                        el.onclick = function () {\n                            that.$refs.car.dropDownVisible = false\n                        }\n                    })\n            }, 100)\n        },\n        handleModel(e) {\n            let model_id = e;\n            if (model_id !== undefined) {\n                this.listQuery.model_id = model_id\n                this.fetchList();\n            } else {\n                this.list = [];\n            }\n        },\n\n        fetchList() {\n\n            GetModelIdByInfo(this.listQuery).then(res => {\n                this.list = res.data.data\n                this.total = res.data.total\n            })\n        }\n    }\n}\n",null]}