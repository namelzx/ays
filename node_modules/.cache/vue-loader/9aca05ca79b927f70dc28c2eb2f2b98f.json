{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/shop/manage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/shop/manage.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Citylist } from \"@/api/city\";\n\nimport { GetSaleByAll } from \"@/api/salesman\";\n\nimport { GetDataByList,GetDataBydownload } from \"@/api/shop\";\nimport waves from \"@/directive/waves\";\nimport { getArrByKey, pickerOptions } from \"@/utils\";\n\nimport { regionDataPlus } from \"element-china-area-data\";\n\nconst defaultForm = {\n  openid: \"oQJN40ldFZYLvqoIZm3NGwFu8oKA\",\n  lazada_id: \"\",\n  lazada_list: \"\",\n  lazada_index: \"\",\n  buy_order_no: \"12123\",\n  buy_account: \"199\",\n  buy_product_id: \"\",\n  no_price: \"199\",\n  contact: \"梁泽祥\",\n  tel: \"18677947067\",\n  city_code: undefined,\n  city_desc: \"\",\n  number_plate: \"A871237\",\n  car_model: undefined,\n  car_index: \"\",\n  car_model_id: \"\"\n};\n\nexport default {\n  name: \"Roles\",\n  // components: { rolesForm },\n  directives: {\n    waves\n  },\n  components: {},\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        0: \"禁用\",\n        1: \"正常\"\n      };\n      return statusMap[status];\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      sumorder: 0,\n      productTree: [], //产品树\n      reTitle: \"\",\n      reFrom: {\n        role: 2,\n        type: 1\n      },\n\n      op: [\n        {\n          value: 1,\n          label: \"普通\"\n        },\n        {\n          value: 2,\n          label: \"阿帕认证\"\n        },\n        {\n          value: 3,\n          label: \"阿帕三星\"\n        },\n        {\n          value: 4,\n          label: \"阿帕四星\"\n        },\n        {\n          value: 5,\n          label: \"阿帕五星\"\n        }\n      ],\n\n      list: null,\n      total: null,\n\n      postFrom: Object.assign({}, defaultForm),\n      cityoptions: [], //地址\n      selectedRows: null,\n      listLoading: true,\n      showSearch: false,\n      optionsrec: [\n        {\n          value: 1,\n          label: \"电商推荐\"\n        }\n      ],\n      optionsmk: [\n        {\n          value: 1,\n          label: \"市场推荐\"\n        }\n      ],\n\n      options: [],\n      shop: [],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        // status: 'all',\n        title: \"\"\n      },\n      salesman: [], //业务员\n\n      buttonDisabled: true,\n      deleting: false,\n      pickerOptions: pickerOptions,\n      currentIndex: -1,\n      regionHiera: [],\n      Stitle: \"\"\n    };\n  },\n  computed: {},\n  watch: {},\n  created() {\n    this.fetchList();\n\n    GetSaleByAll().then(res => {\n      this.salesman = res.data;\n    });\n\n    Citylist().then(res => {\n      this.cityoptions = res.data;\n    });\n  },\n\n  methods: {\n\n    elCascaderOnlick() {\n      let that = this;\n      setTimeout(function() {\n        document.querySelectorAll(\".el-cascader-node__label\").forEach(el => {\n          el.onclick = function() {\n            this.previousElementSibling.click();\n            that.$refs.elcascader.dropDownVisible = false;\n          };\n        });\n        document\n          .querySelectorAll(\".el-cascader-panel .el-radio\")\n          .forEach(el => {\n            el.onclick = function() {\n              that.$refs.elcascader.dropDownVisible = false;\n            };\n          });\n      }, 100);\n    },\n\n    //所选门店\n    fetchList() {\n      this.listLoading = true;\n      GetDataByList(this.listQuery).then(response => {\n        this.list = response.data.data;\n        this.total = response.data.total;\n        this.listLoading = !this.listLoading;\n      });\n    },\n    handleFilter() {\n      this.listQuery.page = 1;\n      this.fetchList();\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        psize: 10,\n        status: \"-1\",\n        title: \"\"\n      };\n      this.fetchList();\n    },\n    handleSizeChange(val) {\n      this.listQuery.psize = val;\n      this.fetchList();\n    },\n    handleCurrentChange(val) {\n      this.listQuery.page = val;\n      this.fetchList();\n    },\n    handleModifyStatus(index, id, status) {\n      this.list[index][\"status\"] = 1 - status;\n      change(id, \"status\", 1 - status).then(response => {});\n    },\n    handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false;\n      } else {\n        this.buttonDisabled = true;\n      }\n      this.selectedRows = val;\n    },\n    handleCreate() {\n      this.$refs.fromRoles.handleCreate();\n    },\n    handleUpdate(row) {\n      this.postFrom = {};\n      this.postFrom = row;\n      if (row.city_code.constructor === String) {\n        this.postFrom.city_code = this.postFrom.city_code.split(\",\");\n      }\n\n      if (row.car_model !== null) {\n        if (row.car_model.constructor === String) {\n          this.postFrom.car_model = this.postFrom.car_model.split(\",\");\n        }\n      }\n      if (row.buy_product_id !== null) {\n        if (row.buy_product_id.constructor === String) {\n          let arr = [];\n          let temp = this.postFrom.buy_product_id.split(\",\");\n          for (let i = 0; i < temp.length; i++) {\n            arr.push(parseInt(temp[i]));\n          }\n\n          this.postFrom.buy_product_id = arr;\n        }\n      }\n\n      if (row.lazada_list !== null) {\n        if (row.lazada_list.constructor === String) {\n          this.postFrom.lazada_list = this.postFrom.lazada_list.split(\",\");\n        }\n\n        let lazada = this.postFrom.lazada_list;\n        this.postFrom.lazada_list = [];\n        for (let i = 0; i < lazada.length; i++) {\n          this.postFrom.lazada_list.push(parseInt(lazada[i]));\n        }\n      }\n\n      this.is_disabled = false;\n\n      if (this.postFrom.status === \"驳回\") {\n        this.postFrom.status = \"重新派单\";\n      }\n      console.log(this.userinfo);\n\n      this.Stitle =\n        this.userinfo.realName +\n        \"-\" +\n        this.userinfo.group.title +\n        this.postFrom.status +\n        \"操作\";\n\n      this.dialogVisible = !this.dialogVisible;\n    },\n    handleClose() {\n      this.dialogVisible = !this.dialogVisible;\n      this.fetchList();\n    },\n\n    handleDelete(index, id) {\n      const _this = this;\n      this.$confirm(\"此操作将永久删除该记录, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          _this.$set(_this.list[index], \"delete\", true);\n          del(id)\n            .then(response => {\n              if (response.status === 1) {\n                _this.list.splice(index, 1);\n                _this.total = _this.total - 1;\n                _this.$notify.success(response.msg);\n                this.fetchList();\n              } else {\n                _this.$notify.error(response.msg);\n              }\n              _this.$set(_this.list[index], \"delete\", false);\n            })\n            .catch(error => {\n              _this.$set(_this.list[index], \"delete\", false);\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: \"info\",\n            message: \"已取消删除\"\n          });\n        });\n    },\n    handleDeleteAll() {\n      const _this = this;\n      if (this.selectedRows.length > 0) {\n        this.$confirm(\"此操作将永久删除该记录, 是否继续?\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        })\n          .then(() => {\n            _this.deleting = true;\n            const ids = getArrByKey(_this.selectedRows, \"id\");\n            const idstr = ids.join(\",\");\n            delAll({ ids: idstr })\n              .then(response => {\n                if (response.status === 1) {\n                  const delindex = [];\n                  _this.list.forEach(function(item, index, input) {\n                    if (ids.indexOf(item.id) > -1) {\n                      delindex.push(index);\n                    }\n                  });\n                  for (let i = delindex.length - 1; i >= 0; i--) {\n                    _this.list.splice(delindex[i], 1);\n                  }\n                  _this.total = _this.total - delindex.length;\n                  _this.$message.success(response.msg);\n                } else {\n                  _this.$message.error(response.msg);\n                }\n                _this.deleting = false;\n              })\n              .catch(error => {\n                _this.deleting = false;\n              });\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"已取消删除\"\n            });\n          });\n      } else {\n        _this.$message.error(\"请选择要删除的数据\");\n      }\n    },\n\n    //导出数据\n    handleDownload() {\n      this.listLoading = true\n      GetDataBydownload(this.listQuery).then(res => {\n        import('@/vendor/Export2Excel').then(excel => {\n          console.log(excel)\n          const tHeader =res.data.tHeader\n          const filterVal =res.data.filterVal\n          const data = this.formatJson(res.data.data, filterVal)\n\n          var day2 = new Date()\n          day2.setTime(day2.getTime())\n          var s2 =\n            day2.getFullYear() +\n            '-' +\n            (day2.getMonth() + 1) +\n            '-' +\n            day2.getDate()\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: s2\n          })\n          this.listLoading = false\n          this.$message.success('下载成功')\n        })\n      })\n    },\n    formatJson(data, filterVal) {\n      return data.map(v =>\n        filterVal.map(j => {\n          if (j === 'timestamp') {\n            return parseTime(v[j])\n          } else {\n            return v[j]\n          }\n        })\n      )\n    },\n    handleCommand(command) {\n      const _this = this;\n      if (this.selectedRows.length > 0) {\n        const ids = getArrByKey(this.selectedRows, \"id\");\n        const idstr = ids.join(\",\");\n        changeAll({ val: idstr, field: \"status\", value: command })\n          .then(response => {\n            if (response.status === 1) {\n              _this.list.forEach(function(item, index, input) {\n                if (ids.indexOf(item.id) > -1) {\n                  _this.list[index][\"status\"] = command;\n                }\n              });\n              _this.$message.success(response.msg);\n            } else {\n              _this.$message.error(response.msg);\n            }\n          })\n          .catch(error => {});\n      } else {\n        _this.$message.error(\"请选择要操作的数据\");\n      }\n    }\n  }\n};\n",null]}