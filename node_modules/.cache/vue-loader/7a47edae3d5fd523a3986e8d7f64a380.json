{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/advertising/edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/advertising/edit.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport E from \"wangeditor\";\nimport {PostDataByAdd,updateStatus,deleteHomeAdvertise,getBanner} from '@/api/banner';\n\nimport oneImage from '@/components/Upload/oneImage'\n// import {createHomeAdvertise, getHomeAdvertise, updateHomeAdvertise} from '@/api/homeAdvertise'\nconst defaultTypeOptions = [\n  {\n    label: 'PC首页轮播',\n    value: 0\n  },\n  {\n    label: 'APP首页轮播',\n    value: 1\n  }\n];\nconst defaultHomeAdvertise = {\n  name: null,\n  type: 1,\n  images_url: null,\n  is_recomm: null,\n  content: null,\n  status: 2,\n  url: null,\n  sort: 0,\n};\nexport default {\n  name: 'HomeAdvertiseDetail',\n  components:{oneImage},\n  props: {\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      homeAdvertise: null,\n      rules: {\n        name: [\n          {required: true, message: '请输入广告名称', trigger: 'blur'},\n          {min: 2, max: 140, message: '长度在 2 到 140 个字符', trigger: 'blur'}\n        ],\n        url: [\n          {required: true, message: '请输入广告链接', trigger: 'blur'}\n        ],\n        startTime: [\n          {required: true, message: '请选择开始时间', trigger: 'blur'}\n        ],\n        endTime: [\n          {required: true, message: '请选择到期时间', trigger: 'blur'}\n        ],\n        pic: [\n          {required: true, message: '请选择广告图片', trigger: 'blur'}\n        ]\n      },\n      typeOptions: Object.assign({}, defaultTypeOptions)\n    }\n  },\n  created(){\n    console.log(this.$route)\n    var isedit=this.$route.name\n    if (isedit==='advertising/edit') {\n      getBanner(this.$route.params.id).then(response => {\n        this.homeAdvertise = response.data;\n      });\n    }else{\n      this.homeAdvertise = Object.assign({},defaultHomeAdvertise);\n    }\n\n\n  },\n  methods: {\n    handellicense(e) {\n      this.homeAdvertise.images_url = e.file.response.data\n    },\n    onSubmit(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.$confirm('是否提交数据', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            if (this.isEdit) {\n              updateHomeAdvertise(this.$route.query.id, this.homeAdvertise).then(response => {\n                this.$refs[formName].resetFields();\n                this.$message({\n                  message: '修改成功',\n                  type: 'success',\n                  duration:1000\n                });\n                this.$router.back();\n              });\n            } else {\n              PostDataByAdd(this.homeAdvertise).then(response => {\n                this.$message({\n                  message: '提交成功',\n                  type: 'success',\n                  duration:1000\n                });\n              });\n            }\n          });\n\n        } else {\n          this.$message({\n            message: '验证失败',\n            type: 'error',\n            duration:1000\n          });\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n      this.homeAdvertise = Object.assign({},defaultHomeAdvertise);\n    },\n    catchData(e){\n      // this.homeAdvertise.confirmButtonText=\n    }\n  },\n  mounted() {\n    this.editor = new E(this.$refs.editorElem);\n    // 编辑器的事件，每次改变会获取其html内容\n    this.editor.customConfig.onchange = html => {\n      this.editorContent = html;\n      this.catchData(this.editorContent); // 把这个html通过catchData的方法传入父组件\n    };\n    this.editor.customConfig.menus = [\n      // 菜单配置\n      'head', // 标题\n      'bold', // 粗体\n      'fontSize', // 字号\n      'fontName', // 字体\n      'italic', // 斜体\n      'underline', // 下划线\n      'strikeThrough', // 删除线\n      'foreColor', // 文字颜色\n      'backColor', // 背景颜色\n      'link', // 插入链接\n      'list', // 列表\n      'justify', // 对齐方式\n      'quote', // 引用\n      'emoticon', // 表情\n      'image', // 插入图片\n      'table', // 表格\n      'code', // 插入代码\n      'undo', // 撤销\n      'redo' // 重复\n    ];\n    this.editor.create(); // 创建富文本实例\n  }\n}\n",null]}