{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/layout/components/Sidebar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/layout/components/Sidebar/index.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\n\nexport default {\n  components: { SidebarItem, Logo },\n  data() {\n    return {\n      tar_num: 0,\n      tar_num_list: 0,\n      tar_num_list_c:undefined,//\n      tablist: []\n    }\n  },\n  created() {\n    var that = this\n    let arr = []\n    for (let i = 0; i < this.muenroles.length; i++) {\n      // arr[i].title=this.muenroles[i].meta\n      let temp = {\n        title: '',\n        icon: '',\n        list: []\n      }\n      if (this.muenroles[i].meta !== undefined) {\n        if (this.muenroles[i].meta.title !== undefined) {\n          temp.title = this.muenroles[i].meta.title\n          if (this.muenroles[i].children !== undefined) {\n            for (let k = 0; k < this.muenroles[i].children.length; k++) {\n\n              if (this.muenroles[i].children[k].children) {\n\n                temp.list.push({\n                  name: this.muenroles[i].children[k].meta.title,\n                  hidden: this.muenroles[i].children[k].hidden,\n                  url: '#' + this.muenroles[i].path + '/' + this.muenroles[i].children[k].path,\n                  children: this.muenroles[i].children[k].children\n                })\n              } else {\n                temp.list.push({\n                  name: this.muenroles[i].children[k].meta.title,\n                  hidden: this.muenroles[i].children[k].hidden,\n                  url: '#' + this.muenroles[i].path + '/' + this.muenroles[i].children[k].path\n                })\n              }\n\n            }\n          }\n        }\n      }\n      if (temp.title !== '') {\n        arr.push(temp)\n      }\n    }\n    this.tablist = arr\n    for (let i = 0; i < arr.length; i++) {\n\n      for (let k = 0; k < arr[i].list.length; k++) {\n        if ('#/' + this.$route.name === arr[i].list[k].url) {\n          that.tar_num_list = k\n          that.tar_num = i\n        }\n      }\n    }\n\n  },\n  methods: {\n    totimes(index) {\n      this.tar_num = index\n      this.tar_num_list_c = undefined\n      this.tar_num_list = undefined\n\n\n    },\n    tobarlist(index) {\n      this.tar_num_list = index\n      this.tar_num_list_c = undefined\n\n    },\n    tobarlistc(cindex,url) {\n\n      this.tar_num_list_c = cindex+'-'+url\n      this.tar_num_list = undefined\n\n    }\n  },\n  watch: {\n    $route(to, from) {\n\n      for (let i = 0; i < this.tablist.length; i++) {\n        for (let k = 0; k < this.tablist[i].list.length; k++) {\n          if ('#' + to.path === this.tablist[i].list[k].url) {\n            this.tar_num_list = k\n            return\n          }\n        }\n      }\n\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'permission_routes',\n      'sidebar',\n      'muenroles'\n    ]),\n    activeMenu() {\n      const route = this.$route\n      const { meta, path } = route\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    showLogo() {\n      return this.$store.state.settings.sidebarLogo\n    },\n    variables() {\n      return variables\n    },\n    isCollapse() {\n      return !this.sidebar.opened\n    }\n  }\n}\n",null]}