{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/user/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/user/index.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { change, changeAll, del, delAll, getList } from '@/api/wechatuser'\nimport waves from '@/directive/waves'\nimport { getArrByKey, pickerOptions } from '@/utils'\n\nexport default {\n  name: 'Roles',\n  components: {},\n  directives: {\n    waves\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        2: '否',\n        1: '是'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: null,\n      selectedRows: null,\n      listLoading: true,\n      showSearch: false,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        status: '-1',\n        title: ''\n      },\n      buttonDisabled: true,\n      deleting: false,\n      pickerOptions: pickerOptions,\n      currentIndex: -1\n    }\n  },\n  watch: {},\n  created() {\n    this.fetchList()\n  },\n  methods: {\n    fetchList() {\n      this.listLoading = true\n      getList(this.listQuery).then(response => {\n        this.list = response.data.data\n        this.total = response.data.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchList()\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        psize: 10,\n        status: '-1',\n        title: ''\n      }\n      this.fetchList()\n    },\n    handleSizeChange(val) {\n      this.listQuery.psize = val\n      this.fetchList()\n    },\n    handleCurrentChange(val) {\n      this.listQuery.page = val\n      this.fetchList()\n    },\n    handleModifyStatus(index, id, status) {\n      this.list[index]['status'] = 1 - status\n      change(id, 'status', 1 - status).then(response => {\n      })\n    },\n    handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false\n      } else {\n        this.buttonDisabled = true\n      }\n      this.selectedRows = val\n    },\n    handleCreate() {\n      this.$refs.fromRoles.handleCreate()\n    },\n    handleUpdate(index, id) {\n      this.currentIndex = index\n      // this.$refs.fromRoles.handleUpdate(id);\n      console.log(id)\n      this.$router.push({ path: '/user/info/' + id })\n    },\n    updateRow(temp) {\n      if (this.currentIndex >= 0 && temp.id > 0) {\n        this.list.splice(this.currentIndex, 1, temp)\n      } else {\n        if (this.list.length >= 10) {\n          this.list.pop()\n        }\n        this.list.push(temp)\n        this.total = this.total + 1\n      }\n      this.currentIndex = -1\n    },\n    handleDelete(index, id) {\n      const _this = this\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          _this.$set(_this.list[index], 'delete', true)\n          del(id)\n            .then(response => {\n              if (response.status === 1) {\n                _this.list.splice(index, 1)\n                _this.total = _this.total - 1\n                _this.$notify.success(response.msg)\n              } else {\n                _this.$notify.error(response.msg)\n              }\n              _this.$set(_this.list[index], 'delete', false)\n            })\n            .catch(error => {\n              _this.$set(_this.list[index], 'delete', false)\n            })\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n    },\n    handleDeleteAll() {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n          .then(() => {\n            _this.deleting = true\n            const ids = getArrByKey(_this.selectedRows, 'id')\n            const idstr = ids.join(',')\n            delAll({ ids: idstr })\n              .then(response => {\n                if (response.status === 1) {\n                  const delindex = []\n                  _this.list.forEach(function(item, index, input) {\n                    if (ids.indexOf(item.id) > -1) {\n                      delindex.push(index)\n                    }\n                  })\n                  for (let i = delindex.length - 1; i >= 0; i--) {\n                    _this.list.splice(delindex[i], 1)\n                  }\n                  _this.total = _this.total - delindex.length\n                  _this.$message.success(response.msg)\n                } else {\n                  _this.$message.error(response.msg)\n                }\n                _this.deleting = false\n              })\n              .catch(error => {\n                _this.deleting = false\n              })\n          })\n          .catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            })\n          })\n      } else {\n        _this.$message.error('请选择要删除的数据')\n      }\n    },\n    handleCommand(command) {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        const ids = getArrByKey(this.selectedRows, 'id')\n        const idstr = ids.join(',')\n        changeAll({ val: idstr, field: 'status', value: command })\n          .then(response => {\n            if (response.status === 1) {\n              _this.list.forEach(function(item, index, input) {\n                if (ids.indexOf(item.id) > -1) {\n                  _this.list[index]['status'] = command\n                }\n              })\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n          })\n          .catch(error => {\n          })\n      } else {\n        _this.$message.error('请选择要操作的数据')\n      }\n    }\n  }\n}\n",null]}