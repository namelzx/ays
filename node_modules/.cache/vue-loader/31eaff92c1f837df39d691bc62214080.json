{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/situation/top.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/situation/top.vue","mtime":1590833181356},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {GetHomeByData, GetTop, GetShopByList} from '@/api/home'\nimport Test from './top/test'\n\nimport {PostRecomBySet} from '@/api/shop'\n\nimport TableView from './table/index'\n\nimport {\n    PostBlackByUpdate,\n    PostWhiteByUpdate,\n\n\n} from '@/api/shop'\nimport TableTopView from './table/toptable'\n\nimport Show from './top/show'\n\nexport default {\n    name: 'Index',\n    data() {\n        return {\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近一周',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近一个月',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: '最近三个月',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },\n            topshow: false,\n            listQuery: {\n                time: [],\n            },\n            total: 0,\n            listQ: {\n                time: [],\n                page: 1,\n                limit: 10,\n            },\n            ordersum: 0,\n            timesum: 0,\n            provinces: {},\n            product: {},\n            salesman: {},\n            activeName: '-1',\n            shop: [],\n            statistical: {\n                order: 0,\n                Demand: 0\n            },\n            city: {},\n            order: [],\n            backvalue: undefined,\n            whiteVisible: false,\n            BlockVisible: false,\n            backtemp: {},\n            options: [\n                {\n                    value: 2,\n                    label: '市场',\n                    children: [{\n                        value: 100000,\n                        label: '永久'\n                    }, {\n                        value: 7,\n                        label: '七天'\n                    }, {\n                        value: 30,\n                        label: '一个月'\n                    }, {\n                        value: 90,\n                        label: '三个月'\n                    }, {\n                        value: 365,\n                        label: '1年'\n                    }\n                    ]\n                }, {\n                    value: 3,\n                    label: '电商',\n                    children: [{\n                        value: 100000,\n                        label: '永久'\n                    }, {\n                        value: 7,\n                        label: '七天'\n                    }, {\n                        value: 30,\n                        label: '一个月'\n                    }, {\n                        value: 90,\n                        label: '三个月'\n                    }, {\n                        value: 365,\n                        label: '1年'\n                    }\n                    ]\n                }]\n        }\n\n    },\n\n    components: {\n        Test,\n        TableView,\n        TableTopView,\n        Show\n    },\n    provinces: [],\n    filters: {\n        book(str) {\n            if (str === 1) {\n                return '宝典'\n            } else {\n                return ''\n            }\n        },\n    },\n    created() {\n        this.getdata()\n        this.handelShop()\n    },\n    methods: {\n        handleDerive() {\n            this.$refs.ShowAdmin.handleShow()\n        },\n        handelShow() {\n            this.$router.push('/situation/evenshop')\n            // this.topshow = true\n        },\n        handelShop() {\n            this.listQ.time = this.listQuery.time\n            GetShopByList(this.listQ).then(res => {\n                this.total = res.data.total\n                this.shop = res.data.shop\n            })\n\n        },\n        handleTop(data, title) {\n            this.$refs.tableTopview.handleView(data, title)\n        },\n        handleSizeChange(val) {\n            this.listQ.limit = val\n            this.handelShop()\n        },\n        handleCurrentChange(val) {\n            this.listQ.page = val\n            this.handelShop()\n        },\n        handelSet(row, type) {\n            console.log(row)\n            var temp = {\n                id: row.id,\n                val: 0,\n            }\n            if (type === 'mk_rec') {\n                temp.field = 'mk_rec'\n                console.log(row.mk_rec, 3)\n                if (row.mk_rec === 2) {\n                    temp.val = 1\n                } else {\n                    temp.val = 2\n                }\n\n            }\n            if (type === 'ec_rec') {\n                temp.field = 'ec_rec'\n                console.log(row.mk_rec, 2)\n                if (row.ec_rec === 2) {\n                    temp.val = 1\n                } else {\n                    temp.val = 2\n                }\n            }\n            PostRecomBySet(temp).then(res => {\n                this.getdata()\n            })\n        },\n        handleChange(value) {\n            this.day = value[1]\n            console.log(value[0])\n            if (value[0] === 2) {\n                this.backtemp.blacklist = value[0]\n                this.backtemp.blackday = value[1]\n                this.backtemp.id = this.shop.id\n                this.backtemp.ecblacklist = undefined\n                this.backtemp.ecblackday = undefined\n            }\n            if (value[0] === 3) {\n                this.backtemp.ecblacklist = value[0]\n                this.backtemp.ecblackday = value[1]\n                this.backtemp.blacklist = undefined\n                this.backtemp.blackday = undefined\n                this.backtemp.id = this.shop.id\n            }\n\n        },\n        toShop(item) {\n            this.BlockVisible = true;\n            this.shop = item;\n        },\n        handelWhite(type) {\n            //市场拉白\n            var tmep = {}\n            if (type === 'ma') {\n                var temp = {\n                    id: this.shop.id,\n                    blacklist: 1,\n                    blackday: 0,\n                    blackend: 0\n                }\n            }\n            if (type === 'ec') {\n                var temp = {\n                    id: this.shop.id,\n                    ecblacklist: 1,\n                    ecblackday: 0,\n                    ecblackend: 0\n                }\n            }\n            PostWhiteByUpdate(temp).then(res => {\n                this.$message.success('拉白成功')\n                this.getdata()\n                this.whiteVisible = false\n            })\n\n        },\n        handleBack() {\n            const _this = this\n            var day = this.day\n            if (day === 100000) {\n                day = '永久'\n            } else {\n                day = day + '天'\n            }\n            this.$confirm('此操作将该门店 ' + day + ' 拉黑, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n\n                PostBlackByUpdate(this.backtemp).then(res => {\n                    console.log(res)\n                    _this.BlockVisible = !this.BlockVisible\n                    this.$message.success('拉黑成功')\n                    this.getdata()\n                })\n            }).catch(() => {\n                _this.$message({\n                    type: 'info',\n                    message: '已取消删除'\n                })\n            })\n        },\n        clickToWhite(item) {\n            this.shop = item\n            this.whiteVisible = !this.whiteVisible\n        },\n        clickToBlock() {\n            this.BlockVisible = false\n        },\n        handleFilter() {\n            this.getdata()\n            this.handelShop()\n        },\n        handleDownload() {\n\n        },\n        handleClick(e) {\n            this.getdata();\n        },\n        getdata() {\n\n            GetTop(this.listQuery).then(res => {\n                this.provinces = res.data.provinces\n                this.salesman = res.data.salesman\n                this.product = res.data.product\n                this.city = res.data.city\n                this.ordersum = res.data.ordersum\n                this.timesum = res.data.timesum\n            })\n        }\n    }\n}\n",null]}