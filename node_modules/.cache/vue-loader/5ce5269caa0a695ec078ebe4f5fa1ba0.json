{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/shop/audit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/shop/audit.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import InputForm from '@components/FormInput/index'\nimport InputForm from '@/components/FormInput/index'\nimport { change, changeAll, del, delAll, getList, PostDataByAudit, PostBlackByUpdate } from '@/api/shop'\nimport waves from '@/directive/waves'\nimport { getArrByKey, pickerOptions } from '@/utils'\n\nimport { GetDataByList, GetDataByShopAll } from '@/api/shop'\n\nimport { Citylist } from '@/api/city'\n\nimport ShList from '@/components/shop/index'\n\nimport { GetSaleByAll } from '@/api/salesman'\nimport openWindow from '@/utils/openWindow'\n\nexport default {\n  name: 'audit',\n  data() {\n    return {\n      Associated: {},\n      news_edit: false,//未启用关联\n      cityoptions: [],//地址\n      ShopVisible: false,\n      form: {},\n      salesman: [],\n      input: '',\n      tableKey: 0,\n      rejectedFrom: {\n        shop_id: undefined,\n        desc: undefined\n      },\n      postFrom: {},\n      shoplist: [],\n      listLoading: true,\n      total: 0,\n      checkList: [],\n      dialogVisible: false,\n      innerVisible: false,\n      op: [{\n        label: '普通',\n        value: 1\n      },\n        {\n          label: '阿帕认证',\n          value: 2\n        }, {\n          label: '阿帕三星',\n          value: 3\n        }, {\n          label: '阿帕四星',\n          value: 4\n        }, {\n          label: '阿帕五星',\n          value: 5\n        }],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        status: '1',\n        title: ''\n\n      },\n      BlockVisible: false,\n      shoptotal: 0,\n      backvalue: [],\n      mcvalue: [],\n\n      options: [{\n        value: 2,\n        label: '市场',\n        children: [{\n          value: 100000,\n          label: '永久'\n        }, {\n          value: 7,\n          label: '七天'\n        }, {\n          value: 30,\n          label: '一个月'\n        }, {\n          value: 90,\n          label: '三个月'\n        }, {\n          value: 365,\n          label: '1年'\n        }\n        ]\n\n      }],\n\n      mctions: [{\n        value: 3,\n        label: '电商',\n        children: [{\n          value: 100000,\n          label: '永久'\n        }, {\n          value: 7,\n          label: '七天'\n        }, {\n          value: 30,\n          label: '一个月'\n        }, {\n          value: 90,\n          label: '三个月'\n        }, {\n          value: 365,\n          label: '1年'\n        }]\n\n      }],\n      backtemp: {\n        blacklist: undefined,\n        blackday: undefined,\n        id: undefined\n      },\n      day: 0,\n      shop: {\n        id: '',\n        type: 1,\n        type_star: 1,\n        ec_recom: 1,\n        mt_recom: 1,\n        book: 1,\n        update_star: 1,\n        score: 1\n      },\n      list: [],\n      adminll:[],\n      shopQuery: {\n        cityCode: undefined,\n        shopname: undefined,\n        page: 1,\n        limit: 10,\n        tel: undefined\n      }\n\n    }\n  },\n  components: {\n    InputForm,\n    waves,\n    ShList\n  },\n  created() {\n    Citylist().then(res => {\n      this.cityoptions = res.data\n    })\n    this.shopList()\n    this.fetchList()\n    GetSaleByAll().then(res => {\n      this.salesman = res.data\n    })\n    adminall().then(res => {\n      this.adminll = res.data;\n    });\n  },\n  methods: {\n\n    handleImg(img) {\n      openWindow(img, '图片预览', '500', '400')\n    },\n\n    elCascaderOnlick() {\n      let that = this\n      setTimeout(function() {\n        document.querySelectorAll('.el-cascader-node__label').forEach(el => {\n          el.onclick = function() {\n            this.previousElementSibling.click()\n            that.$refs.elcascader.dropDownVisible = false\n          }\n        })\n        document\n          .querySelectorAll('.el-cascader-panel .el-radio')\n          .forEach(el => {\n            el.onclick = function() {\n              that.$refs.elcascader.dropDownVisible = false\n            }\n          })\n      }, 100)\n    },\n\n    elCascaderOnlick() {\n      let that = this\n      setTimeout(function() {\n        document.querySelectorAll('.el-cascader-node__label').forEach(el => {\n          el.onclick = function() {\n            this.previousElementSibling.click()\n            that.$refs.elcascader.dropDownVisible = false\n          }\n        })\n        document\n          .querySelectorAll('.el-cascader-panel .el-radio')\n          .forEach(el => {\n            el.onclick = function() {\n              that.$refs.elcascader.dropDownVisible = false\n            }\n          })\n      }, 100)\n    },\n    handelColse() {\n      this.news_edit = false\n      this.dialogVisible = false\n    },\n    clickToBlock() {\n      this.BlockVisible = !this.BlockVisible\n    },\n    handleAssociated() {\n      PostDataByAudit(this.Associated).then(res => {\n        this.dialogVisible = false\n        this.ShopVisible = false\n        this.fetchList()\n        this.postFrom={}\n        this.news_edit = false\n\n      })\n    },\n    handelToshop(e) {\n      console.log(e)\n      var data = this.postFrom\n      this.postFrom.book = e.book\n      this.postFrom.ec_rec = e.ec_rec\n      this.postFrom.mk_rec = e.mk_rec\n      this.postFrom.desc = e.desc\n      this.postFrom.to_hang = e.to_hang\n\n      this.postFrom.blacklist = e.blacklist\n      this.postFrom.blackday = e.blackday\n      this.postFrom.blackend = e.blackend\n      console.log(e.salesman_id)\n      this.postFrom.salesman_id=e.salesman_id\n\n      this.postFrom.ecblacklist = e.ecblacklist\n      this.postFrom.ecblackday = e.ecblackday\n\n      this.postFrom.ecblackend = e.ecblackend\n\n      this.postFrom.shop_type = e.shop_type\n\n      let citycode = e.cityCode.split(',')\n\n      if (e.cityCode) {\n        for (let i = 0; i < citycode.length; i++) {\n          citycode[i] = parseInt(citycode[i])\n          if (i === 0) {\n            this.postFrom.city_id = citycode[i]\n          }\n          if (i === 1) {\n            this.postFrom.provinces_id = citycode[i]\n          }\n          if (i === 2) {\n            this.postFrom.county_id = citycode[i]\n          }\n        }\n        console.log(citycode)\n      }\n      this.postFrom.cityCode = citycode\n\n      if (this.postFrom.book === 1) {\n        this.postFrom.book = true\n      }\n      if (this.postFrom.ec_rec === 1) {\n        this.postFrom.ec_rec = true\n      }\n      if (this.postFrom.mk_rec === 1) {\n        this.postFrom.mk_rec = true\n      }\n      if (this.postFrom.to_hang === 1) {\n        this.postFrom.to_hang = true\n      }\n\n      this.backvalue = [this.postFrom.blacklist, this.postFrom.blackday]\n      this.mcvalue = [this.postFrom.ecblacklist, this.postFrom.ecblackday]\n      var temp = {\n        nwe_id: this.postFrom.id,\n        postFrom: {\n          id: e.id,\n          shopkeeper: data.shopkeeper,\n          shopname: data.shopname,\n          tel: data.tel,\n          cityCode: data.cityCode,\n          location: data.location,\n          front: data.front,\n          license: data.license,\n          user_id: data.user_id\n        }\n      }\n\n      this.Associated = temp\n\n      this.news_edit = true\n      this.ShopVisible = false\n      // PostDataByAudit(temp).then(res=>{\n      //   console.log('更新成功')\n      //   this.dialogVisible=false;\n      //   this.ShopVisible=false;\n      //   this.fetchList()\n      //\n      // })\n    },\n\n    handleChange(value) {\n      this.day = value[1]\n      console.log(value[0])\n      if (value[0] === 2) {\n        this.postFrom.blacklist = value[0]\n        this.postFrom.blackday = value[1]\n        this.backvalue = [value[0], value[1]]\n      }\n      if (value[0] === 3) {\n        this.postFrom.ecblacklist = value[0]\n        this.postFrom.ecblackday = value[1]\n        this.mcvalue = [value[0], value[1]]\n      }\n      console.log(value[0])\n\n    },\n    handleSizeShopChange(val) {\n      this.shopQuery.limit = val\n      this.shopList()\n    },\n\n    handleCurrentShopChange(val) {\n      this.shopQuery.page = val\n      this.shopList()\n    },\n    shopList() {\n      GetDataByList(this.shopQuery).then(response => {\n        this.shoplist = response.data.data\n        console.log(this.shoplist)\n        this.shoptotal = response.data.total\n      })\n    },\n    fetchList() {\n      this.listLoading = true\n      getList(this.listQuery).then(response => {\n        this.list = response.data.data\n        this.total = response.data.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchList()\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        limit: 10,\n        status: '1',\n        title: ''\n      }\n      this.fetchList()\n    },\n    //关闭\n    handleClose() {\n\n    },\n    // 1 新建门店  2 关联门店\n    handleNewAudit(type) {\n\n      //通过\n      this.postFrom.status = type\n      this.rejectedFrom.shop_id = this.postFrom.id\n      var post = {\n        postFrom: this.postFrom,\n        rejectedFrom: this.rejectedFrom\n      }\n      PostDataByAudit(post).then(res => {\n        // console.log(res)\n        this.dialogVisible = !this.dialogVisible\n        this.innerVisible = false\n        this.postFrom={}\n        this.handleFilterClear()\n        this.handleFilter()\n      })\n\n    },\n    handleBack() {\n      const _this = this\n      var day = this.day\n      if (day === 100000) {\n        day = '永久'\n      }\n      else {\n        day = day + '天'\n      }\n      this.$confirm('此操作将该门店 ' + day + ' 拉黑, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n\n        this.backtemp.id = this.postFrom.id\n        PostBlackByUpdate(this.backtemp).then(res => {\n          console.log(res)\n          _this.BlockVisible = !this.BlockVisible\n          this.$message.success('拉黑成功')\n          this.getinfo()\n        })\n      }).catch(() => {\n        _this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    //审核弹出\n    handleAudit(row) {\n      this.postFrom = row\n      if (this.postFrom.book === 1) {\n        this.postFrom.book = true\n      }\n      if (this.postFrom.ec_rec === 1) {\n        this.postFrom.ec_rec = true\n      }\n      if (this.postFrom.mk_rec === 1) {\n        this.postFrom.mk_rec = true\n      }\n      if (this.postFrom.blacklist === 1) {\n        this.postFrom.blacklist = true\n      }\n      let citycode =[]\n      if( row.cityCode.constructor==Array){\n        citycode=row.cityCode\n      }else{\n        citycode= row.cityCode.split(',')\n      }\n\n\n      if (row.cityCode) {\n        for (let i = 0; i < citycode.length; i++) {\n          citycode[i] = parseInt(citycode[i])\n          if (i === 0) {\n            this.postFrom.city_id = citycode[i]\n          }\n          if (i === 1) {\n            this.postFrom.provinces_id = citycode[i]\n          }\n          if (i === 2) {\n            this.postFrom.county_id = citycode[i]\n          }\n        }\n      }\n      this.postFrom.cityCode=citycode\n\n\n      this.dialogVisible = !this.dialogVisible\n    },\n\n    handleSizeChange(val) {\n      this.listQuery.psize = val\n      this.fetchList()\n    },\n    handleCurrentChange(val) {\n      this.listQuery.page = val\n      this.fetchList()\n    },\n\n    handleShopSizeChange(val) {\n      this.shopQuery.page = val\n      this.shopList()\n    },\n    handleShopCurrentChange(val) {\n      this.shopQuery.page = val\n      this.shopList()\n    },\n    handleModifyStatus(index, id, status) {\n      this.list[index]['status'] = 1 - status\n      change(id, 'status', 1 - status).then(response => {\n      })\n    },\n    handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false\n      } else {\n        this.buttonDisabled = true\n      }\n      this.selectedRows = val\n    },\n    handleCreate() {\n      this.$refs.fromRoles.handleCreate()\n    },\n    handleUpdate(index, id) {\n      this.currentIndex = index\n      this.$refs.fromRoles.handleUpdate(id)\n    },\n    updateRow(temp) {\n      if (this.currentIndex >= 0 && temp.id > 0) {\n        this.list.splice(this.currentIndex, 1, temp)\n      } else {\n        if (this.list.length >= 10) {\n          this.list.pop()\n        }\n        this.list.push(temp)\n        this.total = this.total + 1\n      }\n      this.currentIndex = -1\n    },\n    handleDelete(index, id) {\n      const _this = this\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        _this.$set(_this.list[index], 'delete', true)\n        del(id).then(response => {\n          if (response.status === 1) {\n            _this.list.splice(index, 1)\n            _this.total = _this.total - 1\n            _this.$notify.success(response.msg)\n          } else {\n            _this.$notify.error(response.msg)\n          }\n          _this.$set(_this.list[index], 'delete', false)\n        }).catch((error) => {\n          _this.$set(_this.list[index], 'delete', false)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    handleDeleteAll() {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          _this.deleting = true\n          const ids = getArrByKey(_this.selectedRows, 'id')\n          const idstr = ids.join(',')\n          delAll({ ids: idstr }).then(response => {\n            if (response.status === 1) {\n              const delindex = []\n              _this.list.forEach(function(item, index, input) {\n                if (ids.indexOf(item.id) > -1) {\n                  delindex.push(index)\n                }\n              })\n              for (let i = delindex.length - 1; i >= 0; i--) {\n                _this.list.splice(delindex[i], 1)\n              }\n              _this.total = _this.total - delindex.length\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.deleting = false\n          }).catch((error) => {\n            _this.deleting = false\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      } else {\n        _this.$message.error('请选择要删除的数据')\n      }\n    },\n    handleCommand(command) {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        const ids = getArrByKey(this.selectedRows, 'id')\n        const idstr = ids.join(',')\n        changeAll({ val: idstr, field: 'status', value: command }).then(response => {\n          if (response.status === 1) {\n            _this.list.forEach(function(item, index, input) {\n              if (ids.indexOf(item.id) > -1) {\n                _this.list[index]['status'] = command\n              }\n            })\n            _this.$message.success(response.msg)\n          } else {\n            _this.$message.error(response.msg)\n          }\n        }).catch((error) => {\n        })\n      } else {\n        _this.$message.error('请选择要操作的数据')\n      }\n    }\n  }\n}\n",null]}