{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/order/install.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/order/install.vue","mtime":1594883274941},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar app0\n\nimport {\n  change,\n  changeAll,\n  del,\n  delAll,\n  GetDataByList,\n  GetQueryBydownload,\n  PostDataByAdd,\n  PostNoteByAdd,\n  PostReturnedByAdd\n} from '@/api/order'\nimport waves from '@/directive/waves'\nimport { getArrByKey, pickerOptions } from '@/utils'\nimport { mapGetters } from 'vuex'\nimport sendOrder from './install/sendOrder'\nimport addOrder from './install/addOrder'\nimport OrderInfo from './install/OrderInfo'\nimport { Citylist } from '@/api/city'\nimport { GetProductByTree } from '@/api/product'\nimport { getBrand, getSeries, getModel } from '@/api/tools'\nimport { GetecshopByList } from '@/api/ecshop'\nimport { GetDataByShopAll } from '@/api/shop'\n\n\nimport { GetSaleByAll } from '@/api/salesman'\n\nimport { adminall } from '@/api/admin'\n\nexport default {\n  name: 'Roles',\n  // components: { rolesForm },\n  directives: {\n    waves\n  },\n  components: {\n    sendOrder,\n    OrderInfo,\n    addOrder\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        0: '禁用',\n        1: '正常'\n      }\n      return statusMap[status]\n    },\n    nFormatter(num, digits = 2) {\n      const si = [\n        { value: 1, symbol: '' },\n        // { value: 1e3, symbol: \"K\" },\n        { value: 1e6, symbol: 'M' },\n        { value: 1e9, symbol: 'G' },\n        { value: 1e12, symbol: 'T' },\n        { value: 1e15, symbol: 'P' },\n        { value: 1e18, symbol: 'E' }\n      ]\n      const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/\n      let i\n      for (i = si.length - 1; i > 0; i--) {\n        if (num >= si[i].value) {\n          break\n        }\n      }\n      return (\n        (num / si[i].value).toFixed(digits).replace(rx, '$1') + si[i].symbol\n      )\n    }\n  },\n  data() {\n    return {\n      props: {\n        lazy: true,\n        lazyLoad(node, resolve) {\n          const { level } = node\n\n          if (level === 0) {\n            getBrand().then(res => {\n\n              var data = res.data\n\n              let nodes = []\n              for (let i = 0; i < data.length; i++) {\n                nodes.push({ label: data[i].name, value: data[i].brandid })\n              }\n              resolve(nodes)\n\n            })\n\n            // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n          if (level === 1) {\n            getSeries(node.data.value).then(res => {\n              var data = res.data\n              let nodes = []\n              for (let i = 0; i < data.length; i++) {\n                nodes.push({ label: data[i].factory_name + ' ' + data[i].series_name, value: data[i].series_id })\n              }\n              resolve(nodes)\n\n            })\n\n            // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n\n          if (level === 2) {\n            getModel(node.data.value).then(res => {\n              var data = res.data\n              let nodes = []\n              for (let i = 0; i < data.length; i++) {\n                nodes.push({ label: data[i].label, value: data[i].value, leaf: level >= 2 })\n              }\n              resolve(nodes)\n\n            })\n\n            // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n          if (level === 3) {\n            let nodes = []\n            resolve(nodes)\n          }\n        }\n      },\n      isIndeterminate: false,\n      checkAll: false, //全选\n      checkedCities: [],\n      multipleSelection: [],\n      checkedGameId: [], //\n      returned: {},\n      evainfo: {},\n      eavVisible: false,\n      loading: true,\n      sumorder: 0,\n      productTree: [], //产品树\n      reTitle: '',\n      reFrom: {\n        role: 2,\n        type: 1\n      },\n      after: [\n        {\n          lable: '已售后',\n          value: 1\n        },\n        {\n          lable: '未售后',\n          value: 2\n        }\n      ],\n\n      eva: [\n        {\n          lable: '已评价',\n          value: 1\n        },\n        {\n          lable: '未评价',\n          value: 2\n        }\n      ],\n\n      orderStatus: [\n        {\n          lable: '全部',\n          value: 'all'\n        },\n        {\n          lable: '待处理',\n          value: 0\n        },\n        {\n          lable: '待确认(业务)',\n          value: 1\n        },\n        {\n          lable: '待确认(门店)',\n          value: 2\n        },\n        {\n          lable: '待安装',\n          value: 3\n        },\n        {\n          lable: '已安装',\n          value: 4\n        },\n        {\n          lable: '财审1',\n          value: 5\n        },\n        {\n          lable: '财审2',\n          value: 6\n        },\n        {\n          lable: '待结算',\n          value: 7\n        },\n        {\n          lable: '已结算',\n          value: 8\n        },\n        {\n          lable: '退货',\n          value: 10\n        },\n        {\n          lable: '删除',\n          value: 11\n        }\n      ],\n      visit: [\n        {\n          lable: '已回访',\n          value: 1\n        },\n        {\n          lable: '未回访',\n          value: 2\n        }\n      ],\n      infodialogVisible: false, //打开详情\n      reOption: [\n        {\n          lable: '客户临时取消安装'\n        },\n        {\n          lable: '客户不在该城市了'\n        },\n        {\n          lable: '距离原因客户要求更换门店'\n        },\n        {\n          lable: '其他原因'\n        }\n      ],\n      is_disabled: false,\n      shopQuery: {\n        cityCode: undefined,\n        shopname: undefined,\n        tel: undefined\n      },\n      postFrom: {},\n      permissions: [], //权限组\n      RedialogVisible: false,\n      ReturndialogVisible: false,\n      ReturnData: {\n        type: 1,\n        price: undefined,\n        courier: undefined,\n        courier_order_no: undefined,\n        name: undefined\n      },\n      addVisible: false,\n      innerVisible: false,\n      dialogVisible: false,\n\n      tableKey: 0,\n      order_id: undefined,\n      CarModellist: [], //车型数据\n      lazada: [], //所有平台\n      salesman: [], //所有业务员\n      device: [], //装置罩\n      carl: [],\n      list: null,\n      total: null,\n      // postFrom: Object.assign({}, defaultForm),\n      cityoptions: [], //地址\n      selectedRows: null,\n      listLoading: true,\n      showSearch: false,\n      BackoffVisible: false,\n      options: [],\n      shop: [],\n      listQuery: {\n        page: 1,\n        limit: 10,\n        status: 'all',\n        title: '',\n        sstatus: 'all'\n      },\n      allsum: 0,\n      countdata: [\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        },\n        {\n          total: 1,\n          status: 1\n        }\n      ],\n\n      tabtext: 'install',\n      buttonDisabled: true,\n      deleting: false,\n      pickerOptions: pickerOptions,\n      currentIndex: -1,\n      regionHiera: [],\n      Stitle: '',\n      adminll: []\n    }\n  },\n  computed: {\n    ...mapGetters(['userinfo', 'brand', 'group'])\n  },\n  watch: {},\n  created() {\n    adminall().then(res => {\n      this.adminll = res.data\n    })\n    this.permissions = this.group.btn.split(',')\n    this.fetchList()\n\n    Citylist().then(res => {\n      this.cityoptions = res.data\n    })\n    GetecshopByList().then(res => {\n      this.lazada = res.data\n    })\n\n    console.log(this.userinfo)\n    //产品树\n    GetProductByTree().then(res => {\n      this.productTree = res.data\n    })\n    // GetDataByShopAll().then(res => {\n    //   this.shop = res.data\n    // })\n\n    GetSaleByAll().then(res => {\n      this.salesman = res.data\n    })\n  },\n\n  methods: {\n    elCascaderOnlick() {\n      let that = this\n      setTimeout(function() {\n        document.querySelectorAll('.el-cascader-node__label').forEach(el => {\n          el.onclick = function() {\n            this.previousElementSibling.click()\n            that.$refs.elcascader.dropDownVisible = false\n          }\n        })\n        document\n          .querySelectorAll('.el-cascader-panel .el-radio')\n          .forEach(el => {\n            el.onclick = function() {\n              that.$refs.elcascader.dropDownVisible = false\n            }\n          })\n      }, 100)\n    },\n\n    elCascaderproduct() {\n      let that = this\n      setTimeout(function() {\n        document.querySelectorAll('.el-cascader-node__label').forEach(el => {\n          el.onclick = function() {\n            this.previousElementSibling.click()\n            that.$refs.product.dropDownVisible = false\n          }\n        })\n        document\n          .querySelectorAll('.el-cascader-panel .el-radio')\n          .forEach(el => {\n            el.onclick = function() {\n              that.$refs.product.dropDownVisible = false\n            }\n          })\n      }, 100)\n    },\n    elCascaderCar() {\n      let that = this\n      setTimeout(function() {\n        document.querySelectorAll('.el-cascader-node__label').forEach(el => {\n          el.onclick = function() {\n            this.previousElementSibling.click()\n            that.$refs.car.dropDownVisible = false\n          }\n        })\n        document\n          .querySelectorAll('.el-cascader-panel .el-radio')\n          .forEach(el => {\n            el.onclick = function() {\n              that.$refs.car.dropDownVisible = false\n            }\n          })\n      }, 100)\n    },\n    headGain() {\n      console.log(this.checkedCities, '获取id')\n    },\n    //监听全选\n    handleCheckAllChange(val) {\n      this.checkedCities = val ? this.checkedGameId : []\n      this.isIndeterminate = false\n      if (this.checkAll) {\n        console.log('全选')\n      } else {\n        console.log('未全选')\n      }\n    },\n    //监听单选\n    handleCheckedCitiesChange(value) {\n      let checkedCount = value.length\n      this.checkAll = checkedCount === this.checkedGameId.length\n      this.isIndeterminate =\n        checkedCount > 0 && checkedCount < this.checkedGameId.length\n    },\n    handleBackoff(item) {\n      this.returned = item.returned\n      this.BackoffVisible = !this.BackoffVisible\n    },\n\n    handlecancel() {\n      this.eavVisible = false\n    },\n    handelEva(row) {\n      this.evainfo = {}\n      this.evainfo = row.eva\n\n      if (row.eva.img.constructor === String) {\n        this.evainfo.img = row.eva.img.split(',')\n      }\n      this.eavVisible = true\n      this.reTitle = row.id + '-' + '车主评价'\n    },\n    handeReturn() {\n      // this.$message('暂未编写退货逻辑')\n      this.ReturnData.order_id = this.order_id\n      this.ReturnData.tocontent = this.userinfo.realName + ' 退货订单'\n      PostReturnedByAdd(this.ReturnData).then(res => {\n        this.$message.success('退货成功')\n        this.ReturndialogVisible = !this.ReturndialogVisible\n        this.fetchList()\n      })\n    },\n    //导出数据\n    handleDownload() {\n      this.listLoading = true\n      GetQueryBydownload(this.listQuery).then(res => {\n        import('@/vendor/Export2Excel').then(excel => {\n          console.log(excel)\n          const tHeader = res.data.tHeader\n          const filterVal = res.data.filterVal\n          const data = this.formatJson(res.data.data, filterVal)\n\n          var day2 = new Date()\n          day2.setTime(day2.getTime())\n          var s2 =\n            day2.getFullYear() +\n            '-' +\n            (day2.getMonth() + 1) +\n            '-' +\n            day2.getDate()\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: '安装单-' + s2\n          })\n          this.listLoading = false\n          this.$message.success('下载成功')\n        })\n      })\n    },\n    formatJson(data, filterVal) {\n      return data.map(v =>\n        filterVal.map(j => {\n          if (j === 'timestamp') {\n            return parseTime(v[j])\n          } else {\n            return v[j]\n          }\n        })\n      )\n    },\n    handleReturn(row) {\n      this.ReturndialogVisible = !this.ReturndialogVisible\n      this.reFrom.rejected=row.status\n      this.reTitle = row.id + ' ' + '退货操作'\n      this.order_id = row.id\n    },\n    handleRe() {\n      this.RedialogVisible = !this.RedialogVisible\n    },\n    rolesbtn(val) {\n      var index = this.permissions.indexOf(val)\n      if (index > -1) {\n        return true\n      } else {\n        return false\n      }\n    },\n    handeldownload() {\n      this.$message('暂无导出')\n    },\n    handelInfoDialog() {\n      this.infodialogVisible = !this.infodialogVisible\n    },\n    //打开详情\n    handelInfo(row, type) {\n      this.tabtext = type\n      console.log(type)\n      this.postFrom = row\n      if (row.city_code !== null) {\n        if (row.city_code.constructor === String) {\n          this.postFrom.city_code = this.postFrom.city_code.split(',')\n        }\n      }\n\n      if (row.car_model !== null) {\n        if (row.car_model.constructor === String) {\n          this.postFrom.car_model = this.postFrom.car_model.split(',')\n        }\n      }\n      if (row.lazada_list !== null) {\n        if (row.lazada_list.constructor === String) {\n          this.postFrom.lazada_list = this.postFrom.lazada_list.split(',')\n        }\n        let lazada = this.postFrom.lazada_list\n        this.postFrom.lazada_list = []\n\n        for (let i = 0; i < lazada.length; i++) {\n          this.postFrom.lazada_list.push(parseInt(lazada[i]))\n        }\n      }\n\n      this.infodialogVisible = !this.infodialogVisible\n    },\n    handelPostRe() {\n      this.reFrom.admin_id = this.userinfo.id\n\n\n      this.reFrom.tocontent =\n        '  ' +\n        this.userinfo.realName +\n        '驳回订单,' +\n        '原因' +\n        this.reFrom.content\n      PostNoteByAdd(this.reFrom).then(res => {\n        this.fetchList()\n        this.$message.success('驳回成功')\n        this.RedialogVisible = !this.RedialogVisible\n      })\n    },\n    //驳回\n    handelRejected(row) {\n      console.log(row)\n      var type = row.status\n      this.reTitle = '驳回原因'\n      this.RedialogVisible = !this.RedialogVisible\n      this.reFrom.order_id = row.id\n      this.reFrom.status = row.status\n      this.reFrom.model_title = row.model_title\n      this.reFrom.product_titile = row.product_titile\n      this.reFrom.rejected = row.status\n\n      if (row.shop) {\n        this.reFrom.shopname = row.shop.shopname\n      }\n      this.reFrom.admin_name = this.userinfo.realName\n      this.reFrom.openid = row.openid\n      this.reFrom.salesman_id = row.salesman_id\n      this.reFrom.pre_sales = row.pre_sales\n      this.reTitle = row.id + '-' + row.status + ' ' + '驳回原因'\n      var option = []\n      if (type === '待确认(业务)') {\n        option = [\n          {\n            lable: '安装费错误'\n          },\n          {\n            lable: '选错业务员'\n          },\n          {\n            lable: '客户原因导致驳回'\n          },\n          {\n            lable: '选错门店'\n          }\n        ]\n      }\n      if (type === '待确认(门店)') {\n        option = [\n          {\n            lable: '客户临时取消安装'\n          },\n          {\n            lable: '客户不在该城市了'\n          },\n          {\n            lable: '距离原因客户要求更换门店'\n          },\n          {\n            lable: '其他原因'\n          }\n        ]\n      }\n\n      if (type === '待安装') {\n        option = [\n          {\n            lable: '客户临时取消安装'\n          },\n          {\n            lable: '客户不在该城市了'\n          },\n          {\n            lable: '距离原因客户要求更换门店'\n          },\n          {\n            lable: '其他原因'\n          }\n        ]\n      }\n      if (type === '已安装') {\n        option = [\n          {\n            lable: '未安装'\n          },\n          {\n            lable: '其他原因'\n          }\n        ]\n      }\n      if (type === '财审1' || type === '财审2' || type === '待结算') {\n        option = [\n          {\n            lable: '查无此单'\n          },\n          {\n            lable: '其他原因'\n          }\n        ]\n      }\n      this.reOption = option\n    },\n    //所选门店\n    fetchList() {\n      this.listLoading = true\n      GetDataByList(this.listQuery).then(response => {\n        this.list = response.data.data\n        for (let i = 0; i < this.list.length; i++) {\n          this.checkedGameId.push(this.list[i].id)\n          this.multipleSelection = this.checkedGameId\n        }\n        this.total = response.data.total\n        let countdata = response.data.countdata\n\n        var temp = []\n        var allsum = 0\n        for (let i = 0; i < 13; i++) {\n          temp.push({ total: 0, status: i })\n        }\n        for (let i = 0; i < countdata.length; i++) {\n          allsum = allsum + countdata[i].total\n          temp[countdata[i].status].total = countdata[i].total\n          if (countdata[i].status === 9) {\n            if (temp[0].total === 0) {\n              temp[0].total = countdata[i].total\n            } else {\n              temp[0].total = temp[0].total + countdata[i].total\n            }\n          }\n        }\n\n        this.listLoading = !this.listLoading\n        this.allsum = allsum\n        this.countdata = temp\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchList()\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        psize: 10,\n        status: '-1',\n        title: ''\n      }\n      this.fetchList()\n    },\n    handleSizeChange(val) {\n      this.listQuery.psize = val\n      this.fetchList()\n    },\n\n    handleStatusChange(val) {\n      this.listQuery.page = 1\n      this.listQuery.sstatus = val\n      this.fetchList()\n    },\n    handleCurrentChange(val) {\n      this.listQuery.page = val\n      this.fetchList()\n    },\n    handleModifyStatus(index, id, status) {\n      this.list[index]['status'] = 1 - status\n      change(id, 'status', 1 - status).then(response => {\n      })\n    },\n    handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false\n      } else {\n        this.buttonDisabled = true\n      }\n      this.selectedRows = val\n    },\n    handleCreate() {\n      this.postFrom = {}\n      this.postFrom.status = '新增'\n      this.Stitle = '新增' + '操作'\n      this.is_disabled = false\n      this.addVisible = true\n    },\n    handleUpdate(row) {\n      this.postFrom = {}\n      this.postFrom = row\n      if (row.city_code.constructor === String) {\n        this.postFrom.city_code = this.postFrom.city_code.split(',')\n      }\n\n      if (row.car_model !== null) {\n        if (row.car_model.constructor === String) {\n          this.postFrom.car_model = this.postFrom.car_model.split(',')\n        }\n      }\n      if (row.buy_product_id !== null) {\n        if (row.buy_product_id.constructor === String) {\n          let arr = []\n          let temp = this.postFrom.buy_product_id.split(',')\n          for (let i = 0; i < temp.length; i++) {\n            arr.push(parseInt(temp[i]))\n          }\n          this.postFrom.buy_product_id = arr\n        }\n      }\n\n      if (row.lazada_list !== null) {\n        if (row.lazada_list.constructor === String) {\n          this.postFrom.lazada_list = this.postFrom.lazada_list.split(',')\n        }\n\n        let lazada = this.postFrom.lazada_list\n        this.postFrom.lazada_list = []\n        for (let i = 0; i < lazada.length; i++) {\n          this.postFrom.lazada_list.push(parseInt(lazada[i]))\n        }\n      }\n\n      this.is_disabled = false\n\n      if (this.postFrom.status === '驳回') {\n        this.postFrom.status = '重新派单'\n      }\n\n      this.Stitle = this.postFrom.id + '-' + this.postFrom.status + '操作'\n\n      this.dialogVisible = true\n    },\n\n    handleEdit(row) {\n      this.postFrom = {}\n      this.postFrom = row\n      if (row.city_code.constructor === String) {\n        this.postFrom.city_code = this.postFrom.city_code.split(',')\n      }\n\n      if (row.car_model !== null) {\n        if (row.car_model.constructor === String) {\n          this.postFrom.car_model = this.postFrom.car_model.split(',')\n        }\n      }\n      if (row.buy_product_id !== null) {\n        if (row.buy_product_id.constructor === String) {\n          let arr = []\n          let temp = this.postFrom.buy_product_id.split(',')\n          for (let i = 0; i < temp.length; i++) {\n            arr.push(parseInt(temp[i]))\n          }\n\n          this.postFrom.buy_product_id = arr\n        }\n      }\n\n      if (row.lazada_list !== null) {\n        if (row.lazada_list.constructor === String) {\n          this.postFrom.lazada_list = this.postFrom.lazada_list.split(',')\n        }\n\n        let lazada = this.postFrom.lazada_list\n        this.postFrom.lazada_list = []\n        for (let i = 0; i < lazada.length; i++) {\n          this.postFrom.lazada_list.push(parseInt(lazada[i]))\n        }\n      }\n\n      this.is_disabled = false\n\n      if (this.postFrom.status === '驳回') {\n        this.postFrom.status = '重新派单'\n      }\n\n      this.postFrom.status = '修改'\n\n      this.Stitle = '修改操作'\n\n      this.dialogVisible = !this.dialogVisible\n    },\n    handleClose() {\n      this.dialogVisible = false\n      this.addVisible = false\n      this.fetchList()\n    },\n    handleSend(row, status) {\n      this.postFrom = row\n\n      if (row.city_code !== null) {\n        if (row.city_code.constructor === String) {\n          this.postFrom.city_code = this.postFrom.city_code.split(',')\n        }\n      }\n      if (row.city_code.constructor === String) {\n        this.postFrom.city_code = this.postFrom.city_code.split(',')\n      }\n\n      if (row.buy_product_id.constructor === String) {\n        let arr = []\n        let temp = this.postFrom.buy_product_id.split(',')\n        for (let i = 0; i < temp.length; i++) {\n          arr.push(parseInt(temp[i]))\n        }\n        this.postFrom.buy_product_id = arr\n      }\n\n      if (row.car_model.constructor === String) {\n        this.postFrom.car_model = this.postFrom.car_model.split(',')\n      }\n\n      console.log(row.lazada_list)\n      if (row.lazada_list.constructor === String) {\n        this.postFrom.lazada_list = this.postFrom.lazada_list.split(',')\n      }\n      let lazada = this.postFrom.lazada_list\n      this.postFrom.lazada_list = []\n\n      for (let i = 0; i < lazada.length; i++) {\n        this.postFrom.lazada_list.push(parseInt(lazada[i]))\n      }\n\n      this.dialogVisible = !this.dialogVisible\n      this.Stitle = this.postFrom.id + ' '\n      if (status === 2) {\n        this.Stitle = this.Stitle + '同意派单操作'\n      }\n      if (status === 3) {\n        this.Stitle = this.Stitle + '同意接单操作'\n      }\n      if (status === 4) {\n        this.Stitle = this.Stitle + '完成安装操作'\n      }\n      if (status === 5) {\n        this.Stitle = this.Stitle + '确认完成操作'\n      }\n      if (status === 6) {\n        this.Stitle = this.Stitle + '财审1审核通过操作'\n      }\n      if (status === 7) {\n        this.Stitle = this.Stitle + '财审审核通过操作'\n      }\n      if (status === 8) {\n        this.Stitle = this.Stitle + '-' + '结算操作'\n      }\n      this.is_disabled = true\n    },\n    updateRow() {\n      this.postFrom.city_code = this.postFrom.city_code.join(',')\n      this.postFrom.car_model = this.postFrom.car_model.join(',')\n      PostDataByAdd(this.postFrom).then(res => {\n        this.postFrom = Object.assign({}, defaultForm)\n        this.dialogVisible = !this.dialogVisible\n      })\n    },\n    handleDelete(index, id) {\n      const _this = this\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          _this.$set(_this.list[index], 'delete', true)\n\n          var temp = {\n            tocontent: this.userinfo.realName + '删除订单',\n            id\n          }\n\n          del(temp)\n            .then(response => {\n              if (response.status === 1) {\n                _this.list.splice(index, 1)\n                _this.total = _this.total - 1\n                _this.$notify.success(response.msg)\n                this.fetchList()\n              } else {\n                _this.$notify.error(response.msg)\n              }\n              this.$message.success('删除成功')\n              _this.$set(_this.list[index], 'delete', false)\n            })\n            .catch(error => {\n              _this.$set(_this.list[index], 'delete', false)\n            })\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n    },\n    handleDeleteAll() {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n          .then(() => {\n            _this.deleting = true\n            const ids = getArrByKey(_this.selectedRows, 'id')\n            const idstr = ids.join(',')\n            delAll({ ids: idstr })\n              .then(response => {\n                if (response.status === 1) {\n                  const delindex = []\n                  _this.list.forEach(function(item, index, input) {\n                    if (ids.indexOf(item.id) > -1) {\n                      delindex.push(index)\n                    }\n                  })\n                  for (let i = delindex.length - 1; i >= 0; i--) {\n                    _this.list.splice(delindex[i], 1)\n                  }\n                  _this.total = _this.total - delindex.length\n                  _this.$message.success(response.msg)\n                } else {\n                  _this.$message.error(response.msg)\n                }\n                _this.deleting = false\n              })\n              .catch(error => {\n                _this.deleting = false\n              })\n          })\n          .catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            })\n          })\n      } else {\n        _this.$message.error('请选择要删除的数据')\n      }\n    },\n    handleCommand(command) {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        const ids = getArrByKey(this.selectedRows, 'id')\n        const idstr = ids.join(',')\n        changeAll({ val: idstr, field: 'status', value: command })\n          .then(response => {\n            if (response.status === 1) {\n              _this.list.forEach(function(item, index, input) {\n                if (ids.indexOf(item.id) > -1) {\n                  _this.list[index]['status'] = command\n                }\n              })\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n          })\n          .catch(error => {\n          })\n      } else {\n        _this.$message.error('请选择要操作的数据')\n      }\n    }\n  }\n}\n",null]}