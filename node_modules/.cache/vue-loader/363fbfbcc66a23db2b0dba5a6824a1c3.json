{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/manage/test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/manage/test.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UploadExcelComponent from '@/components/UploadExcel/index.vue'\nimport { PostDataByCityAll, PostDataByBuildAll } from '@/api/shop'\n\nimport { getBrand, getSeries ,getModel} from '@/api/tools'\n\nlet id = 0\nexport default {\n  name: 'UploadExcel',\n  components: { UploadExcelComponent },\n  data() {\n    return {\n      tableData: [],\n      tableHeader: [],\n      props: {\n        lazy: true,\n        lazyLoad(node, resolve) {\n          const { level } = node\n\n          if (level === 0) {\n              getBrand().then(res => {\n\n                var data = res.data\n\n                let nodes = []\n                for (let i = 0; i < data.length; i++) {\n                  nodes.push({ label: data[i].name, value: data[i].brandid })\n                }\n                resolve(nodes)\n\n              })\n\n              // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n          if (level === 1) {\n              getSeries(node.data.value).then(res => {\n                var data = res.data\n                let nodes = []\n                for (let i = 0; i < data.length; i++) {\n                  nodes.push({ label: data[i].factory_name+' '+data[i].series_name, value: data[i].series_id })\n                }\n                resolve(nodes)\n\n              })\n\n              // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n\n\n          if (level === 2) {\n              getModel(node.data.value).then(res => {\n                var data = res.data\n                let nodes = []\n                for (let i = 0; i < data.length; i++) {\n                  nodes.push({ label: data[i].label, value: data[i].value ,leaf: level >= 2})\n                }\n                resolve(nodes)\n\n              })\n\n              // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n          if(level===3){\n            let nodes=[];\n            resolve(nodes)\n          }\n        }\n      }\n    }\n  },\n  methods: {\n    beforeUpload(file) {\n      const isLt1M = file.size / 1024 / 1024 < 1\n\n      if (isLt1M) {\n        return true\n      }\n\n      this.$message({\n        message: 'Please do not upload files larger than 1m in size.',\n        type: 'warning'\n      })\n      return false\n    },\n    handleSuccess({ results, header }) {\n      this.tableData = results\n      PostDataByCityAll(this.tableData).then(res => {\n        console.log('加载完成')\n      })\n      this.tableHeader = header\n    },\n\n    handleBuild({ results, header }) {\n      this.tableData = results\n      // console.log(this.tableData )\n      PostDataByBuildAll(this.tableData).then(res => {\n        console.log('加载完成')\n      })\n      //   this.tableHeader = header\n    }\n  }\n}\n",null]}