{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/manage/admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/manage/admin.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { change, changeAll, del, delAll, getList } from '@/api/admin'\nimport waves from '@/directive/waves'\nimport { getArrByKey, parseTime, pickerOptions } from '@/utils'\nimport openWindow from '@/utils/openWindow'\n\nimport adminInit from './account/administrator'\n\nimport salesman from './account/salesman'\n\nexport default {\n  name: 'Admin',\n  components: { adminInit, salesman },\n  directives: {\n    waves\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        0: '禁用',\n        1: '正常'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      type_tab: false,\n      activeName: 'first'\n\n    }\n  },\n\n  watch: {\n    dateTime: function(val) {\n      this.listQuery.startTime = val[0]\n      this.listQuery.endTime = val[1]\n    }\n  },\n  created() {\n    this.fetchList()\n  },\n\n  methods: {\n\n    fetchList() {\n      this.listLoading = true\n      getList(this.listQuery).then(response => {\n        this.list = response.data.data\n        this.total = response.data.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchList()\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        psize: 10,\n        isEnabled: '-1',\n        userName: '',\n        phone: '',\n        realName: '',\n        startTime: '',\n        endTime: ''\n      }\n      this.dateTime = ''\n      this.fetchList()\n    },\n    handleSizeChange(val) {\n      this.listQuery.psize = val\n      this.fetchList()\n    },\n    handleCurrentChange(val) {\n      this.listQuery.page = val\n      this.fetchList()\n    },\n    handleModifyStatus(index, id, isEnabled) {\n      this.list[index]['isEnabled'] = 1 - isEnabled\n      change(id, 'isEnabled', 1 - isEnabled).then(response => {\n      })\n    },\n    handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false\n      } else {\n        this.buttonDisabled = true\n      }\n      this.selectedRows = val\n    },\n    handleImg(img) {\n      openWindow(img, '图片预览', '500', '400')\n    },\n    handleCreate() {\n      this.$refs.fromAdmin.handleCreate()\n    },\n    handleUpdate(index, id) {\n      this.currentIndex = index\n      this.$refs.fromAdmin.handleUpdate(id)\n    },\n    updateRow(temp) {\n      if (this.currentIndex >= 0 && temp.id > 0) {\n        this.list.splice(this.currentIndex, 1, temp)\n      } else {\n        if (this.list.length >= 10) {\n          this.list.pop()\n        }\n        this.list.unshift(temp)\n        this.total = this.total + 1\n      }\n      this.currentIndex = -1\n    },\n    handleDelete(index, id) {\n      const _this = this\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        _this.$set(_this.list[index], 'delete', true)\n        del(id).then(response => {\n          if (response.status === 1) {\n            _this.list.splice(index, 1)\n            _this.total = _this.total - 1\n            _this.$notify.success(response.msg)\n          } else {\n            _this.$notify.error(response.msg)\n          }\n          _this.$set(_this.list[index], 'delete', false)\n        }).catch((error) => {\n          _this.$set(_this.list[index], 'delete', false)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    handleDeleteAll() {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          _this.deleting = true\n          const ids = getArrByKey(_this.selectedRows, 'id')\n          const idstr = ids.join(',')\n          delAll({ ids: idstr }).then(response => {\n            if (response.status === 1) {\n              const delindex = []\n              _this.list.forEach(function(item, index, input) {\n                if (ids.indexOf(item.id) > -1) {\n                  delindex.push(index)\n                }\n              })\n              for (let i = delindex.length - 1; i >= 0; i--) {\n                _this.list.splice(delindex[i], 1)\n              }\n              _this.total = _this.total - delindex.length\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.deleting = false\n          }).catch((error) => {\n            _this.deleting = false\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      } else {\n        _this.$message.error('请选择要删除的数据')\n      }\n    },\n    handleCommand(command) {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        const ids = getArrByKey(this.selectedRows, 'id')\n        const idstr = ids.join(',')\n        changeAll({ val: idstr, field: 'isEnabled', value: command }).then(response => {\n          if (response.status === 1) {\n            _this.list.forEach(function(item, index, input) {\n              if (ids.indexOf(item.id) > -1) {\n                _this.list[index]['isEnabled'] = command\n              }\n            })\n            _this.$message.success(response.msg)\n          } else {\n            _this.$message.error(response.msg)\n          }\n        }).catch((error) => {\n        })\n      } else {\n        _this.$message.error('请选择要操作的数据')\n      }\n    }\n  }\n}\n",null]}