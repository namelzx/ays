{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js!/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/layout/components/TagsView/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/layout/components/TagsView/index.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/liangzexiang/WebstormProjects/ays/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"/Users/liangzexiang/WebstormProjects/ays/node_modules/@babel/runtime-corejs2/helpers/createForOfIteratorHelper\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _ScrollPane = _interopRequireDefault(require(\"@/components/ScrollPane\"));\n\nvar _i18n = require(\"@/utils/i18n\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    ScrollPane: _ScrollPane.default\n  },\n  data: function data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {}\n    };\n  },\n  computed: {\n    visitedViews: function visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    }\n  },\n  watch: {\n    $route: function $route() {\n      this.addViewTags();\n      this.moveToCurrentTag();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.addViewTags();\n  },\n  methods: {\n    generateTitle: _i18n.generateTitle,\n    // generateTitle by vue-i18n\n    generateRoute: function generateRoute() {\n      if (this.$route.name) {\n        return this.$route;\n      }\n\n      return false;\n    },\n    isActive: function isActive(route) {\n      return route.path === this.$route.path;\n    },\n    addViewTags: function addViewTags() {\n      var route = this.generateRoute();\n\n      if (!route) {\n        return false;\n      }\n\n      this.$store.dispatch('addView', route);\n    },\n    moveToCurrentTag: function moveToCurrentTag() {\n      var _this = this;\n\n      var tags = this.$refs.tag;\n      this.$nextTick(function () {\n        var _iterator = (0, _createForOfIteratorHelper2.default)(tags),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var tag = _step.value;\n\n            if (tag.to.path === _this.$route.path) {\n              _this.$refs.scrollPane.moveToTarget(tag.$el); // when query is different then update\n\n\n              if (tag.to.fullPath !== _this.$route.fullPath) {\n                _this.$store.dispatch('updateVisitedView', _this.$route);\n              }\n\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    },\n    refreshSelectedTag: function refreshSelectedTag(view) {\n      var _this2 = this;\n\n      this.$store.dispatch('delCachedView', view).then(function () {\n        var fullPath = view.fullPath;\n\n        _this2.$nextTick(function () {\n          _this2.$router.replace({\n            path: '/redirect' + fullPath\n          });\n        });\n      });\n    },\n    closeSelectedTag: function closeSelectedTag(view) {\n      var _this3 = this;\n\n      this.$store.dispatch('delView', view).then(function (_ref) {\n        var visitedViews = _ref.visitedViews;\n\n        if (_this3.isActive(view)) {\n          var latestView = visitedViews.slice(-1)[0];\n\n          if (latestView) {\n            _this3.$router.push(latestView);\n          } else {\n            _this3.$router.push('/');\n          }\n        }\n      });\n    },\n    closeOthersTags: function closeOthersTags() {\n      var _this4 = this;\n\n      this.$router.push(this.selectedTag);\n      this.$store.dispatch('delOthersViews', this.selectedTag).then(function () {\n        _this4.moveToCurrentTag();\n      });\n    },\n    closeAllTags: function closeAllTags() {\n      this.$store.dispatch('delAllViews');\n      this.$router.push('/');\n    },\n    openMenu: function openMenu(tag, e) {\n      this.visible = true;\n      this.selectedTag = tag;\n      var offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n\n      this.left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      this.top = e.clientY;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n    }\n  }\n};\nexports.default = _default;",null]}