{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js!/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/manage/roles/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/manage/roles/form.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/liangzexiang/WebstormProjects/ays/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar _rules = require(\"@/api/rules\");\n\nvar _roles = require(\"@/api/roles\");\n\nvar _tree = _interopRequireDefault(require(\"@/utils/tree\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'RolesForm',\n  data: function data() {\n    return {\n      btnLoading: false,\n      ruleList: [],\n      temp: {\n        id: 0,\n        title: '',\n        status: 1,\n        rules: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '名称必填',\n          trigger: 'blur'\n        }]\n      },\n      defaultChecked: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n    };\n  },\n  computed: {\n    getRulesList: function getRulesList() {\n      console.log(_tree.default.listToTreeMulti(this.ruleList));\n      return _tree.default.listToTreeMulti(this.ruleList);\n    }\n  },\n  watch: {\n    dialogFormVisible: function dialogFormVisible() {\n      this.resetTemp();\n    }\n  },\n  created: function created() {\n    this.getRules();\n  },\n  destroyed: function destroyed() {},\n  methods: {\n    getRules: function getRules() {\n      var _this2 = this;\n\n      (0, _rules.getListAll)().then(function (response) {\n        _this2.ruleList = response.data;\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        id: 0,\n        title: '',\n        status: 1,\n        rules: ''\n      };\n    },\n    checkHandle: function checkHandle(data) {\n      var halfCheckedKeys = this.$refs.tree.getHalfCheckedKeys().join(',');\n      var checkedKeys = this.$refs.tree.getCheckedKeys().join(',');\n\n      if (halfCheckedKeys.length && checkedKeys.length) {\n        this.temp.rules = halfCheckedKeys + ',' + checkedKeys;\n      } else if (halfCheckedKeys.length && checkedKeys.length === 0) {\n        this.temp.rules = halfCheckedKeys;\n      } else if (halfCheckedKeys.length === 0 && checkedKeys.length) {\n        this.temp.rules = checkedKeys;\n      } else {\n        this.temp.rules = '';\n      }\n    },\n    handleCreate: function handleCreate() {\n      var _this3 = this;\n\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.currentIndex = -1;\n      this.$refs.tree.setCheckedKeys([]);\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    handleUpdate: function handleUpdate(id) {\n      var _this4 = this;\n\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n\n      var _this = this;\n\n      (0, _roles.getinfo)(id).then(function (response) {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id;\n          _this.temp.title = response.data.title;\n          _this.temp.status = response.data.status;\n          _this.temp.rules = response.data.rules;\n\n          _this4.$refs.tree.setCheckedKeys(_this.temp.rules.split(','));\n        }\n      });\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].clearValidate();\n      });\n    },\n    saveData: function saveData() {\n      var _this5 = this;\n\n      this.btnLoading = true;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var _this = _this5;\n          var d = _this5.temp;\n          (0, _roles.save)(d).then(function (response) {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id;\n              }\n\n              _this5.$emit('updateRow', d);\n\n              _this.dialogFormVisible = false;\n\n              _this.$message.success(response.msg);\n            } else {\n              _this.$message.error(response.msg);\n            }\n\n            _this.btnLoading = false;\n          }).catch(function (error) {\n            _this5.btnLoading = false;\n          });\n        } else {\n          _this5.btnLoading = false;\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}