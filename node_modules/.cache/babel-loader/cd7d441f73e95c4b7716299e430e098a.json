{"remainingRequest":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js!/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liangzexiang/WebstormProjects/ays/src/views/order/install/addOrder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liangzexiang/WebstormProjects/ays/src/views/order/install/addOrder.vue","mtime":1587402564000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liangzexiang/WebstormProjects/ays/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/liangzexiang/WebstormProjects/ays/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/Users/liangzexiang/WebstormProjects/ays/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _city = require(\"@/api/city\");\n\nvar _tools = require(\"@/api/tools\");\n\nvar _salesman = require(\"@/api/salesman\");\n\nvar _index = _interopRequireDefault(require(\"@/components/shop/index\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _shop = require(\"@/api/shop\");\n\nvar _order = require(\"@/api/order\");\n\nvar _ecshop = require(\"@/api/ecshop\");\n\nvar _utils = require(\"@/utils\");\n\nvar _product = require(\"@/api/product\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { CarBrand } from \"@/api/tools\";\nvar defaultForm = {\n  logcontent: \"\",\n  openid: \"oQJN40ldFZYLvqoIZm3NGwFu8oKA\",\n  lazada_id: \"\",\n  lazada_list: \"\",\n  lazada_index: \"\",\n  buy_order_no: \"12123\",\n  buy_account: \"199\",\n  buy_product_id: \"\",\n  no_price: \"199\",\n  contact: \"梁泽祥\",\n  tel: \"18677947067\",\n  city_code: undefined,\n  city_desc: \"\",\n  number_plate: \"A871237\",\n  car_model: undefined,\n  car_index: \"\",\n  car_model_id: \"\"\n};\nvar _default2 = {\n  name: \"sendOrder\",\n  data: function data() {\n    return {\n      shopname: \"\",\n      props: {\n        lazy: true,\n        lazyLoad: function lazyLoad(node, resolve) {\n          var level = node.level;\n\n          if (level === 0) {\n            (0, _tools.getBrand)().then(function (res) {\n              var data = res.data;\n              var nodes = [];\n\n              for (var i = 0; i < data.length; i++) {\n                nodes.push({\n                  label: data[i].name,\n                  value: data[i].brandid\n                });\n              }\n\n              resolve(nodes);\n            }); // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n\n          if (level === 1) {\n            (0, _tools.getSeries)(node.data.value).then(function (res) {\n              var data = res.data;\n              var nodes = [];\n\n              for (var i = 0; i < data.length; i++) {\n                nodes.push({\n                  label: data[i].factory_name + ' ' + data[i].series_name,\n                  value: data[i].series_id\n                });\n              }\n\n              resolve(nodes);\n            }); // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n\n          if (level === 2) {\n            (0, _tools.getModel)(node.data.value).then(function (res) {\n              var data = res.data;\n              var nodes = [];\n\n              for (var i = 0; i < data.length; i++) {\n                nodes.push({\n                  label: data[i].label,\n                  value: data[i].value,\n                  leaf: level >= 2\n                });\n              }\n\n              resolve(nodes);\n            }); // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n          }\n\n          if (level === 3) {\n            var nodes = [];\n            resolve(nodes);\n          }\n        }\n      },\n      shopQuery: {\n        cityCode: undefined,\n        shopname: undefined,\n        page: 1,\n        limit: 10,\n        tel: undefined\n      },\n      innerVisible: false,\n      // dialogVisible: false,\n      checked: true,\n      tableKey: 0,\n      CarModellist: [],\n      //车型数据\n      lazada: [],\n      //所有平台\n      salesman: [],\n      //所有业务员\n      holder: [{\n        label: \"无\",\n        value: \"无\"\n      }, {\n        label: \"解码器\",\n        value: \"解码器\"\n      }, {\n        label: \"解码线组\",\n        value: \"解码线组\"\n      }, {\n        label: \"宝典到店\",\n        value: \"宝典到店\"\n      }],\n      //支架\n      ygj: [{\n        label: \"无\",\n        value: \"无\"\n      }, {\n        label: \"随机发\",\n        value: \"随机发\"\n      }, {\n        label: \"供应商代发\",\n        value: \"供应商代发\"\n      }],\n      //易改件\n      device: [],\n      //装置罩\n      carl: [],\n      list: null,\n      total: null,\n      // postFrom: Object.assign({}, defaultForm),\n      cityoptions: [],\n      //地址\n      selectedRows: null,\n      listLoading: true,\n      showSearch: false,\n      options: [],\n      shop: [],\n      shoplist: [],\n      shoptotal: 0,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        status: \"-1\",\n        title: \"\"\n      },\n      buttonDisabled: true,\n      deleting: false,\n      pickerOptions: _utils.pickerOptions,\n      currentIndex: -1,\n      productTree: [],\n      regionHiera: [],\n      rules: {\n        car_model: [{\n          required: true,\n          message: \"请选择车型\",\n          trigger: \"blur\"\n        }],\n        openid: [{\n          required: true,\n          message: \"请输入openid\",\n          trigger: \"blur\"\n        } // {min: 2, max: 140, message: '长度在 2 到 140 个字符', trigger: 'blur'}\n        ],\n        buy_account: [{\n          required: true,\n          message: \"请输入购买账号\",\n          trigger: \"blur\"\n        }],\n        lazada_list: [{\n          required: true,\n          message: \"请选择购买平台\",\n          trigger: \"blur\"\n        }],\n        buy_product_id: [{\n          required: true,\n          message: \"请选择购买产品\",\n          trigger: \"blur\"\n        }],\n        no_price: [{\n          required: true,\n          message: \"请输入订单金额\",\n          trigger: \"blur\"\n        }],\n        contact: [{\n          required: true,\n          message: \"请输入联系人\",\n          trigger: \"blur\"\n        }],\n        tel: [{\n          required: true,\n          message: \"请输入联系电话\",\n          trigger: \"blur\"\n        }],\n        city_code: [{\n          required: true,\n          message: \"请选择地址\",\n          trigger: \"blur\"\n        }],\n        city_desc: [{\n          required: true,\n          message: \"请输入详细地址\",\n          trigger: \"blur\"\n        }],\n        number_plate: [{\n          required: true,\n          message: \"请输入车牌号\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  computed: (0, _objectSpread2.default)({}, (0, _vuex.mapGetters)([\"userinfo\", \"brand\"])),\n  components: {\n    ShList: _index.default\n  },\n  props: {\n    postFrom: {\n      type: Object,\n      default: function _default() {\n        return Object.assign({}, defaultForm);\n      }\n    },\n    Stitle: {\n      type: String,\n      default: \"\"\n    },\n    is_disabled: {\n      type: Boolean,\n      default: false\n    },\n    dialogVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.shopList();\n    (0, _city.Citylist)().then(function (res) {\n      _this.cityoptions = res.data;\n    });\n    (0, _product.GetProductByTree)().then(function (res) {\n      _this.productTree = res.data;\n    });\n    (0, _ecshop.GetecshopByList)().then(function (res) {\n      _this.lazada = res.data;\n    });\n    (0, _salesman.GetSaleByAll)().then(function (res) {\n      _this.salesman = res.data;\n    });\n  },\n  methods: {\n    handleSizeChange: function handleSizeChange(val) {\n      this.shopQuery.limit = val;\n      this.shopList();\n    },\n    handleStatusChange: function handleStatusChange(val) {\n      this.shopQuery.page = 1;\n      this.shopList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.shopQuery.page = val;\n      this.shopList();\n    },\n    handelToshop: function handelToshop(row) {\n      this.postFrom.shop_id = row.id;\n      this.postFrom.shop_location = row.cityName + \" \" + row.location;\n      this.postFrom.shop_tel = row.tel;\n      this.innerVisible = !this.innerVisible;\n    },\n    shopList: function shopList() {\n      var _this2 = this;\n\n      (0, _shop.GetDataByList)(this.shopQuery).then(function (response) {\n        _this2.shoplist = response.data.data;\n        _this2.shoptotal = response.data.total;\n      });\n    },\n    handelInn: function handelInn() {\n      this.shop = [];\n      this.innerVisible = !this.innerVisible;\n    },\n    //所选门店\n    handleClose: function handleClose() {\n      this.$emit(\"handleClose\");\n    },\n    updateRow: function updateRow(type) {\n      var _this3 = this;\n\n      var arr = this.postFrom;\n      this.$refs[\"postFrom\"].validate(function (valid) {\n        if (valid) {\n          _this3.postFrom.brand_id = _this3.postFrom.car_model[0];\n          _this3.postFrom.series_id = _this3.postFrom.car_model[1];\n          _this3.postFrom.model_id = _this3.postFrom.car_model[2];\n          _this3.postFrom.suit_id = _this3.postFrom.buy_product_id[0];\n          _this3.postFrom.product_id = _this3.postFrom.buy_product_id[1];\n          _this3.postFrom.city_code = _this3.postFrom.city_code.join(\",\");\n          _this3.postFrom.car_model = _this3.postFrom.car_model.join(\",\");\n          _this3.postFrom.lazada_list = _this3.postFrom.lazada_list.join(\",\");\n          _this3.postFrom.buy_product_id = _this3.postFrom.buy_product_id.join(\",\");\n          (0, _order.PostDataByAdd)(_this3.postFrom).then(function (res) {\n            _this3.$emit(\"handleClose\");\n\n            _this3.postFrom = Object.assign({}, defaultForm);\n            _this3.postFrom = arr;\n          });\n        } else {\n          _this3.$message.error(\"请检测必填写项是否填写\");\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    console.log(this.userinfo);\n  }\n};\nexports.default = _default2;",null]}